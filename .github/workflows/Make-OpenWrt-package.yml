name: Make OpenWrt-package

on:
  schedule:
    - cron: '0 3 * * *'
  push:
    branches:
      - main
    paths:
      - '.github/**'
      - '!README.md'
  pull_request:
            branches:
              - main
            paths:
              - '.github/**'
              - '!README.md'
  workflow_dispatch:
    inputs:
      compile:
        description: 'compile'
        required: false
        type: boolean
    
permissions:
  contents: write
  discussions: write
jobs:
  Make:
    outputs:
      compile: ${{ steps.upload.outputs.compile }}
      pakcages: ${{ steps.upload.outputs.pakcages }}
    runs-on: ubuntu-22.04
    steps:
      - name: 准备环境
        run:  |
          sudo -E apt update
          sudo apt install -y curl git  rsync unzip wget sed tar
               
      - name: 建立工作文件夹
        run:  |
          mkdir -p workspace upload backup
          cd workspace
          export WORKSPACE_ROOT_PATH="$(pwd)"
          echo "WORKSPACE_ROOT_PATH=$WORKSPACE_ROOT_PATH" >> $GITHUB_ENV
          cd $WORKSPACE_ROOT_PATH
          mkdir -p download
          cd download
          export DOWNLOAD_ROOT_PATH="$(pwd)"
          echo "DOWNLOAD_ROOT_PATH=$DOWNLOAD_ROOT_PATH" >> $GITHUB_ENV
          mkdir -p lede Lienol immortalwrt wongsyrone passwall other
          cd $WORKSPACE_ROOT_PATH
          mkdir -p cmzj_package
          cd cmzj_package
          export CMZJ_PACKAGE_ROOT_PATH="$(pwd)"
          echo "CMZJ_PACKAGE_ROOT_PATH=$CMZJ_PACKAGE_ROOT_PATH" >> $GITHUB_ENV
          mkdir -p Parted
          cd $GITHUB_WORKSPACE

      - name: 将存储库签出到运行器
        uses: actions/checkout@v3
        with:
          path: upload
          repository: 'chenmozhijin/chenmozhijin-package'
          
      - name: 备份
        run: cp -RT upload backup
          
      - name: 克隆源代码
        working-directory:  ${{ env.DOWNLOAD_ROOT_PATH }}
        run:  |
          cd lede
          git clone https://github.com/coolsnowwolf/lede
          rm -rf lede/.git
          git clone https://github.com/coolsnowwolf/luci
          rm -rf luci/.git
          git clone https://github.com/coolsnowwolf/packages
          rm -rf packages/.git
          cd $DOWNLOAD_ROOT_PATH        
          cd Lienol
          git clone https://github.com/Lienol/openwrt-package
          rm -rf openwrt-package/.git
          cd $DOWNLOAD_ROOT_PATH
          cd immortalwrt
          git clone https://github.com/immortalwrt/luci
          rm -rf luci/.git
          cd $DOWNLOAD_ROOT_PATH
          cd passwall
          git clone https://github.com/xiaorouji/openwrt-passwall -b luci
          rm -rf openwrt-passwall/.git
          mv ./openwrt-passwall/luci-app-passwall ./luci-app-passwall
          rm -rf openwrt-passwall
          git clone https://github.com/xiaorouji/openwrt-passwall
          rm -rf openwrt-passwall/.git
          git clone https://github.com/xiaorouji/openwrt-passwall2
          rm -rf openwrt-passwall2/.git
          cd $DOWNLOAD_ROOT_PATH
          cd other
          git clone https://github.com/rufengsuixing/luci-app-adguardhome
          rm -rf luci-app-adguardhome/.git
          git clone https://github.com/jerrykuku/luci-app-argon-config
          rm -rf luci-app-argon-config/.git
          git clone https://github.com/csrutil/OpenWrt-NIC-Drivers
          rm -rf OpenWrt-NIC-Drivers/.git
          git clone https://github.com/sbwml/package_kernel_r8125
          rm -rf package_kernel_r8125/.git
          git clone https://github.com/lisaac/luci-app-diskman
          rm -rf luci-app-diskman/.git
          git clone https://github.com/sirpdboy/NetSpeedTest
          rm -rf NetSpeedTest/.git
          git clone https://github.com/tty228/luci-app-wechatpush
          rm -rf luci-app-wechatpush/.git
          git clone https://github.com/jerrykuku/luci-theme-argon
          rm -rf luci-theme-argon/.git
          git clone https://github.com/fullcone-nat-nftables/nft-fullcone
          rm -rf nft-fullcone/.git
          git clone https://github.com/chenmozhijin/turboacc
          rm -rf turboacc/.git
          git clone https://github.com/chenmozhijin/luci-app-socat
          rm -rf luci-app-socat/.git
          
      - name: 复制到cmzj_package
        run: |
          cp -r $DOWNLOAD_ROOT_PATH/lede/luci/applications/luci-app-baidupcs-web $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/luci/applications/luci-app-usb-printer $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/luci/applications/luci-app-qbittorrent $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/luci/applications/luci-app-vlmcsd $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/luci/applications/luci-app-webadmin $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/luci/applications/luci-app-cifs-mount $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/packages/net/vlmcsd $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/packages/net/baidupcs-web $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/packages/net/qBittorrent $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/packages/net/qBittorrent-static $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/packages/libs/rblibtorrent $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/packages/libs/qtbase $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/packages/libs/qttools $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/lede/package/lean/ipv6-helper $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/lede/package/lean/ddns-scripts_aliyun $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/lede/package/lean/ddns-scripts_dnspod $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/lede/package/lean/r8168 $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/lede/package/lean/shortcut-fe $CMZJ_PACKAGE_ROOT_PATH/
          #cp -r $DOWNLOAD_ROOT_PATH/immortalwrt/luci/applications/luci-app-syncdial $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/immortalwrt/luci/applications/luci-app-rclone $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/immortalwrt/luci/applications/luci-app-zerotier $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/immortalwrt/luci/applications/luci-app-netdata/ $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/Lienol/openwrt-package/luci-app-fileassistant $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/passwall/luci-app-passwall $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/passwall/openwrt-passwall/* $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/passwall/openwrt-passwall2/luci-app-passwall2 $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/other/luci-app-adguardhome $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/other/luci-app-argon-config $CMZJ_PACKAGE_ROOT_PATH/
          #cp -r $DOWNLOAD_ROOT_PATH/other/OpenWrt-NIC-Drivers/drivers/* $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/other/luci-app-diskman/applications/luci-app-diskman $CMZJ_PACKAGE_ROOT_PATH/
          cp $DOWNLOAD_ROOT_PATH/other/luci-app-diskman/Parted.Makefile $CMZJ_PACKAGE_ROOT_PATH/luci-app-diskman/
          cp -r $DOWNLOAD_ROOT_PATH/other/NetSpeedTest/luci-app-netspeedtest $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/other/NetSpeedTest/homebox $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/other/luci-app-wechatpush $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/other/luci-theme-argon $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/other/nft-fullcone $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/other/turboacc/luci-app-turboacc $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/other/luci-app-socat/luci-app-socat $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/other/OpenWrt-NIC-Drivers/drivers/r8152 $CMZJ_PACKAGE_ROOT_PATH/
          cp -r $DOWNLOAD_ROOT_PATH/lede/lede/package/lean/package_kernel_r8125/* $CMZJ_PACKAGE_ROOT_PATH/r8125
          cd $CMZJ_PACKAGE_ROOT_PATH && ls
          
      - name: 修改Makefile文件
        working-directory:  ${{ env.CMZJ_PACKAGE_ROOT_PATH }}
        run: |
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./luci-app-vlmcsd/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./luci-app-webadmin/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./luci-app-zerotier/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./luci-app-cifs-mount/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./luci-app-baidupcs-web/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./luci-app-rclone/Makefile
          #sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./luci-app-syncdial/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./luci-app-usb-printer/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./luci-app-qbittorrent/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./luci-app-netdata/Makefile
          
      - name: 创建软连接以修复中文支持
        working-directory:  ${{ env.CMZJ_PACKAGE_ROOT_PATH }}
        run: |
          ln -s zh-cn ./luci-app-webadmin/po/zh_Hans
          #ln -s zh-cn ./luci-app-netdata/po/zh_Hans
          ln -s zh-cn ./luci-app-vlmcsd/po/zh_Hans
          ln -s zh-cn ./luci-app-usb-printer/po/zh_Hans
          ln -s zh-cn ./luci-app-qbittorrent/po/zh_Hans
          rm -rf ./luci-app-netspeedtest/po/zh_Hans
          ln -s zh-cn ./luci-app-netspeedtest/po/zh_Hans
          
#      - name: 修改luci-app-netdata
#        working-directory:  ${{ env.CMZJ_PACKAGE_ROOT_PATH }}
#        run: |
#          sed -i 's/setting")/netdata")/' ./luci-app-netdata/luasrc/controller/netdata.lua
#          sed -i 's/("Base Setting"), 20/("Base Setting"), 30/' ./luci-app-netdata/luasrc/controller/netdata.lua
#          sed -i 's/("NetData"), 30/("NetData"), 20/' ./luci-app-netdata/luasrc/controller/netdata.lua
          
      - name: 删除.md .github
        working-directory:  ${{ env.CMZJ_PACKAGE_ROOT_PATH }}
        run: |
          rm -rf */*.md
          rm -rf */.github
        
      - name: 上传
        id: upload
        run: |
          rm -rf upload/*
          cp backup/README.md upload
          cp -RT $CMZJ_PACKAGE_ROOT_PATH upload
          cd upload
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "update$(TZ='Asia/Shanghai' date +@%Y%m%d)" && git push &&  echo "compile=true" >> "$GITHUB_OUTPUT" ||echo "compile=false" >> "$GITHUB_OUTPUT"
          cat $GITHUB_OUTPUT
          echo pakcages=[$(ls | sed '/README.md/d' |sed ":a;N;s/\n/,/g;ba")] >> "$GITHUB_OUTPUT"
  prepare:
    needs: Make
    if:  needs.Make.outputs.compile == 'true' ||  inputs.compile
    runs-on: ubuntu-22.04
    steps:
      - name: 安装编译依赖
        run: |
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y full-upgrade
          sudo apt install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils clang g++ python3-distutils rsync unzip zlib1g-dev wget
          sudo -E systemctl daemon-reload 
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: 下载SDK
        run: |
          url=https://downloads.openwrt.org/releases/23.05.0-rc1/targets/x86/64/openwrt-sdk-23.05.0-rc1-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          wget -O openwrt.tar.xz $url
          tar xvf openwrt.tar.xz
          mv $(basename $url | awk -F '.tar.xz' '{ print $1 }') openwrt
          cd openwrt
          export OPENWRT_ROOT_PATH="$(pwd)"
          echo "OPENWRT_ROOT_PATH=$OPENWRT_ROOT_PATH" >> $GITHUB_ENV
          cd $GITHUB_WORKSPACE && cat $GITHUB_ENV >> prepare_ENV

      - name: 将存储库签出到运行器
        uses: actions/checkout@v3
        with:
          path: ${{ env.OPENWRT_ROOT_PATH }}/package/chenmozhijin-package
          
      - name: 更新 feeds 
        working-directory: ${{ env.OPENWRT_ROOT_PATH }}
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: 加载自定义配置并生成配置文件
        working-directory: ${{ env.OPENWRT_ROOT_PATH }}
        run: |
          echo "CONFIG_TARGET_x86=y" >> $OPENWRT_ROOT_PATH/.config
          echo "CONFIG_TARGET_x86_64=y" >> $OPENWRT_ROOT_PATH/.config
          echo "CONFIG_TARGET_x86_64_DEVICE_generic=y" >> $OPENWRT_ROOT_PATH/.config
          echo CONFIG_PACKAGE_luci-base=m > $OPENWRT_ROOT_PATH/.config
          echo CONFIG_PACKAGE_golang=m > $OPENWRT_ROOT_PATH/.config
          make defconfig
          ./scripts/diffconfig.sh

      - name: 编译依赖
        working-directory: ${{ env.OPENWRT_ROOT_PATH }}
        run: |
          make package/feeds/luci/luci-base/compile -j$(nproc) || make package/feeds/luci/luci-base/compile -j1 V=sc
          make package/feeds/packages/golang/compile -j$(nproc) || make package/feeds/packages/golang/compile -j1 V=sc


      - name: 准备上传
        run:  |
          cd $GITHUB_WORKSPACE
          sudo tar cvpzf /prepare_WORKSPACE.tgz *
          ls

      - name: 上传 prepare_WORKSPACE
        uses: actions/upload-artifact@v3
        with:
          name: prepare_WORKSPACE
          path: /prepare_WORKSPACE.tgz
          
  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        pakcages: [baidupcs-web,brook,chinadns-ng,ddns-scripts_aliyun,ddns-scripts_dnspod,dns2socks,dns2tcp,gn,hysteria,ipt2socks,ipv6-helper,kmod-igb-intel,luci-app-adguardhome,luci-app-argon-config,luci-app-baidupcs-web,luci-app-cifs-mount,luci-app-diskman,luci-app-fileassistant,luci-app-netdata,luci-app-netspeedtest,luci-app-passwall,luci-app-passwall2,luci-app-qbittorrent,luci-app-rclone,luci-app-wechatpush,luci-app-socat,luci-app-turboacc,luci-app-usb-printer,luci-app-vlmcsd,luci-app-webadmin,luci-app-zerotier,luci-theme-argon,microsocks,naiveproxy,nft-fullcone,pdnsd-alt,qBittorrent,qBittorrent-static,qtbase,qttools,r8125,r8152,r8168,rblibtorrent,shadowsocks-rust,shadowsocksr-libev,simple-obfs,sing-box,ssocks,tcping,trojan,trojan-go,trojan-plus,v2ray-core,v2ray-geodata,v2ray-plugin,vlmcsd,xray-core,xray-plugin]
    steps:
      - name: 安装编译依赖
        run: |
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y full-upgrade
          sudo apt install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils clang g++ python3-distutils rsync unzip zlib1g-dev wget
          sudo -E systemctl daemon-reload 
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: 下载prepare_WORKSPACE
        uses: actions/download-artifact@v3
        with:
          name: prepare_WORKSPACE
          
      - name: 解压
        run:  |
          sudo mv $GITHUB_WORKSPACE/prepare_WORKSPACE.tgz /prepare_WORKSPACE.tgz 
          tar xvpfz /prepare_WORKSPACE.tgz  -C $GITHUB_WORKSPACE
          sudo rm -rf /prepare_WORKSPACE.tgz
          cat prepare_ENV
          cat prepare_ENV >> $GITHUB_ENV

      - name: 加载自定义配置并生成配置文件
        working-directory: ${{ env.OPENWRT_ROOT_PATH }}
        run: |
          echo CONFIG_PACKAGE_${{ matrix.pakcages }}=m > .config
          cat ${{ env.OPENWRT_ROOT_PATH }}/package/chenmozhijin-package/.config/${{ matrix.pakcages }} >> $OPENWRT_ROOT_PATH/.config && echo load extra configuration || echo No extra configuration loaded
          make defconfig
          ./scripts/diffconfig.sh

      - name: 编译
        working-directory: ${{ env.OPENWRT_ROOT_PATH }}
        run: |
          make package/chenmozhijin-package/${{ matrix.pakcages }}/compile -j$(nproc) || make package/chenmozhijin-package/${{ matrix.pakcages }}/compile -j1 V=sc

      - name: 准备 artifact
        working-directory: ${{ env.OPENWRT_ROOT_PATH }}
        run: |
          mkdir -p ./artifact
          cp -rf $(find ./bin/packages/ -type f -name "${{ matrix.pakcages }}*.ipk") ./artifact || cp -rf $(find ./bin/targets/ -type f -name "*.ipk") ./artifact || cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact || exit 0

      - name: 上传build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.pakcages }}
          path: ${{ env.OPENWRT_ROOT_PATH }}/artifact/*

  No_updateable:
    needs: Make
    if: ${{ needs.Make.outputs.compile == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "No updateable"
      - run: echo ${{ needs.Make.outputs.pakcages }}
      - run: echo ${{ needs.Make.outputs.compile  }} 
      - run: echo ${{ inputs.compile }}
